// tests converted from SSF
import test from './utils.js';

test('Exponential: #.0000,,,', t => {
  t.format('#.0000,,,', 0.99, '.0000');
  t.format('#.0000,,,', 1.2345, '.0000');
  t.format('#.0000,,,', 12.345, '.0000');
  t.format('#.0000,,,', 123.456, '.0000');
  t.format('#.0000,,,', 1234, '.0000');
  t.format('#.0000,,,', 12345, '.0000');
  t.format('#.0000,,,', 123456, '.0001');
  t.format('#.0000,,,', 1234567, '.0012');
  t.format('#.0000,,,', 12345678, '.0123');
  t.format('#.0000,,,', 123456789, '.1235');
  t.format('#.0000,,,', 1234567890, '1.2346');
  t.format('#.0000,,,', 12345678901, '12.3457');
  t.format('#.0000,,,', 123456789012, '123.4568');
  t.format('#.0000,,,', 4321, '.0000');
  t.format('#.0000,,,', 4321234, '.0043');
  t.end();
});

test('Exponential: #.0000,,', t => {
  t.format('#.0000,,', 0.99, '.0000');
  t.format('#.0000,,', 1.2345, '.0000');
  t.format('#.0000,,', 12.345, '.0000');
  t.format('#.0000,,', 123.456, '.0001');
  t.format('#.0000,,', 1234, '.0012');
  t.format('#.0000,,', 12345, '.0123');
  t.format('#.0000,,', 123456, '.1235');
  t.format('#.0000,,', 1234567, '1.2346');
  t.format('#.0000,,', 12345678, '12.3457');
  t.format('#.0000,,', 123456789, '123.4568');
  t.format('#.0000,,', 1234567890, '1234.5679');
  t.format('#.0000,,', 12345678901, '12345.6789');
  t.format('#.0000,,', 123456789012, '123456.7890');
  t.format('#.0000,,', 4321, '.0043');
  t.format('#.0000,,', 4321234, '4.3212');
  t.end();
});

test('Exponential: #.0000,', t => {
  t.format('#.0000,', 0.99, '.0010');
  t.format('#.0000,', 1.2345, '.0012');
  t.format('#.0000,', 12.345, '.0123');
  t.format('#.0000,', 123.456, '.1235');
  t.format('#.0000,', 1234, '1.2340');
  t.format('#.0000,', 12345, '12.3450');
  t.format('#.0000,', 123456, '123.4560');
  t.format('#.0000,', 1234567, '1234.5670');
  t.format('#.0000,', 12345678, '12345.6780');
  t.format('#.0000,', 123456789, '123456.7890');
  t.format('#.0000,', 1234567890, '1234567.8900');
  t.format('#.0000,', 12345678901, '12345678.9010');
  t.format('#.0000,', 123456789012, '123456789.0120');
  t.format('#.0000,', 4321, '4.3210');
  t.format('#.0000,', 4321234, '4321.2340');
  t.end();
});

test('Exponential: #,##0.0', t => {
  t.format('#,##0.0', 0.99, '1.0');
  t.format('#,##0.0', 1.2345, '1.2');
  t.format('#,##0.0', 12.345, '12.3');
  t.format('#,##0.0', 123.456, '123.5');
  t.format('#,##0.0', 1234, '1,234.0');
  t.format('#,##0.0', 12345, '12,345.0');
  t.format('#,##0.0', 123456, '123,456.0');
  t.format('#,##0.0', 1234567, '1,234,567.0');
  t.format('#,##0.0', 12345678, '12,345,678.0');
  t.format('#,##0.0', 123456789, '123,456,789.0');
  t.format('#,##0.0', 1234567890, '1,234,567,890.0');
  t.format('#,##0.0', 12345678901, '12,345,678,901.0');
  t.format('#,##0.0', 123456789012, '123,456,789,012.0');
  t.format('#,##0.0', 4321, '4,321.0');
  t.format('#,##0.0', 4321234, '4,321,234.0');
  t.end();
});

test('Exponential: ###,##0', t => {
  t.format('###,##0', 0.99, '1');
  t.format('###,##0', 1.2345, '1');
  t.format('###,##0', 12.345, '12');
  t.format('###,##0', 123.456, '123');
  t.format('###,##0', 1234, '1,234');
  t.format('###,##0', 12345, '12,345');
  t.format('###,##0', 123456, '123,456');
  t.format('###,##0', 1234567, '1,234,567');
  t.format('###,##0', 12345678, '12,345,678');
  t.format('###,##0', 123456789, '123,456,789');
  t.format('###,##0', 1234567890, '1,234,567,890');
  t.format('###,##0', 12345678901, '12,345,678,901');
  t.format('###,##0', 123456789012, '123,456,789,012');
  t.format('###,##0', 4321, '4,321');
  t.format('###,##0', 4321234, '4,321,234');
  t.end();
});

test('Exponential: ###,###', t => {
  t.format('###,###', 0.99, '1');
  t.format('###,###', 1.2345, '1');
  t.format('###,###', 12.345, '12');
  t.format('###,###', 123.456, '123');
  t.format('###,###', 1234, '1,234');
  t.format('###,###', 12345, '12,345');
  t.format('###,###', 123456, '123,456');
  t.format('###,###', 1234567, '1,234,567');
  t.format('###,###', 12345678, '12,345,678');
  t.format('###,###', 123456789, '123,456,789');
  t.format('###,###', 1234567890, '1,234,567,890');
  t.format('###,###', 12345678901, '12,345,678,901');
  t.format('###,###', 123456789012, '123,456,789,012');
  t.format('###,###', 4321, '4,321');
  t.format('###,###', 4321234, '4,321,234');
  t.end();
});

test('Exponential: #,###.00', t => {
  t.format('#,###.00', 0.99, '.99');
  t.format('#,###.00', 1.2345, '1.23');
  t.format('#,###.00', 12.345, '12.35');
  t.format('#,###.00', 123.456, '123.46');
  t.format('#,###.00', 1234, '1,234.00');
  t.format('#,###.00', 12345, '12,345.00');
  t.format('#,###.00', 123456, '123,456.00');
  t.format('#,###.00', 1234567, '1,234,567.00');
  t.format('#,###.00', 12345678, '12,345,678.00');
  t.format('#,###.00', 123456789, '123,456,789.00');
  t.format('#,###.00', 1234567890, '1,234,567,890.00');
  t.format('#,###.00', 12345678901, '12,345,678,901.00');
  t.format('#,###.00', 123456789012, '123,456,789,012.00');
  t.format('#,###.00', 4321, '4,321.00');
  t.format('#,###.00', 4321234, '4,321,234.00');
  t.end();
});
